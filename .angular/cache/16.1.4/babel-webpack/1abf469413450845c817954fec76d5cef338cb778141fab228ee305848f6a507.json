{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LocalStorageService {\n  constructor() {\n    this.storage = window.localStorage;\n  }\n  // set(key:string, value: string): void{\n  //   this.storage[key] = value;\n  // }\n  // get(key:string, value: any): void{\n  //   return this.storage[key] || false;\n  // }\n  // setObject(key:string, value:any): void{\n  //   if(!value){\n  //     return;\n  //   }\n  //   this.storage[key] = JSON.stringify(value);\n  // }\n  // Dùng\n  getObject(key) {\n    return JSON.parse(this.storage[key] || '{}');\n  }\n  // Dùng\n  getValue(key) {\n    const obj = JSON.parse(this.storage[key] || null);\n    return obj;\n  }\n  remove(key) {\n    this.storage.removeItem(key);\n  }\n  clear() {\n    this.storage.clear();\n  }\n  get length() {\n    return this.storage.length;\n  }\n  get isStorageEmpty() {\n    return this.storage.length === 0;\n  }\n}\nLocalStorageService.ɵfac = function LocalStorageService_Factory(t) {\n  return new (t || LocalStorageService)();\n};\nLocalStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LocalStorageService,\n  factory: LocalStorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LocalStorageService","constructor","storage","window","localStorage","getObject","key","JSON","parse","getValue","obj","remove","removeItem","clear","length","isStorageEmpty","factory","ɵfac","providedIn"],"sources":["D:\\Data\\TTS_Angular\\ToDoApp\\angular_todoapp\\src\\app\\services\\local-storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  storage: Storage;\n  constructor() {\n    this.storage = window.localStorage;\n    \n  }\n\n  // set(key:string, value: string): void{\n  //   this.storage[key] = value;\n  // }\n\n  // get(key:string, value: any): void{\n  //   return this.storage[key] || false;\n  // }\n\n  // setObject(key:string, value:any): void{\n  //   if(!value){\n  //     return;\n  //   }\n  //   this.storage[key] = JSON.stringify(value);\n  // }\n\n  // Dùng\n  getObject(key:string): any{\n    return JSON.parse(this.storage[key] || '{}');\n  }\n\n  // Dùng\n  getValue<T>(key:string): T{\n    const obj = JSON.parse(this.storage[key] || null);\n    return <T>obj;\n  }\n\n  remove(key: string): any{\n    this.storage.removeItem(key);\n  }\n\n  clear(){\n    this.storage.clear();\n  }\n\n  get length(): number{\n    return this.storage.length;\n  }\n\n  get isStorageEmpty(): boolean{\n    return this.storage.length === 0; \n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAA;IACE,IAAI,CAACC,OAAO,GAAGC,MAAM,CAACC,YAAY;EAEpC;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACAC,SAASA,CAACC,GAAU;IAClB,OAAOC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACN,OAAO,CAACI,GAAG,CAAC,IAAI,IAAI,CAAC;EAC9C;EAEA;EACAG,QAAQA,CAAIH,GAAU;IACpB,MAAMI,GAAG,GAAGH,IAAI,CAACC,KAAK,CAAC,IAAI,CAACN,OAAO,CAACI,GAAG,CAAC,IAAI,IAAI,CAAC;IACjD,OAAUI,GAAG;EACf;EAEAC,MAAMA,CAACL,GAAW;IAChB,IAAI,CAACJ,OAAO,CAACU,UAAU,CAACN,GAAG,CAAC;EAC9B;EAEAO,KAAKA,CAAA;IACH,IAAI,CAACX,OAAO,CAACW,KAAK,EAAE;EACtB;EAEA,IAAIC,MAAMA,CAAA;IACR,OAAO,IAAI,CAACZ,OAAO,CAACY,MAAM;EAC5B;EAEA,IAAIC,cAAcA,CAAA;IAChB,OAAO,IAAI,CAACb,OAAO,CAACY,MAAM,KAAK,CAAC;EAClC;;AAhDWd,mBAAmB,C;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB,C;SAAnBA,mBAAmB;EAAAgB,OAAA,EAAnBhB,mBAAmB,CAAAiB,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}