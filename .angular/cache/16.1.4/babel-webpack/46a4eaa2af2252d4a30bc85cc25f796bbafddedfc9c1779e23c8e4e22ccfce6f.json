{"ast":null,"code":"import { Todo } from '../models/todo.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Filter } from '../models/filter.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./local-storage.service\";\nexport class TodoService {\n  constructor(storageService) {\n    this.storageService = storageService;\n    this.lengthSubject = new BehaviorSubject(0);\n    this.displayTodosSubject = new BehaviorSubject([]);\n    this.currentFilter = Filter.All;\n    this.todo$ = this.displayTodosSubject.asObservable();\n    this.length$ = this.lengthSubject.asObservable();\n  }\n  fetchFromLocalStorage() {\n    this.todos = this.storageService.getValue(TodoService.TodoStorageKey) || [];\n    this.filterTodos = [...this.todos.map(todo => ({\n      ...todo\n    }))];\n    this.updateTodosData();\n  }\n  updateToLocalStorage() {\n    this.storageService.setObject(TodoService.TodoStorageKey, this.todos);\n    this.filterTodo(this.currentFilter, false);\n    this.updateTodosData();\n  }\n  addTodo(content) {\n    const date = new Date(Date.now()).getTime();\n    const newTodo = new Todo(date, content);\n    this.todos.unshift(newTodo);\n    this.updateToLocalStorage();\n  }\n  changeTodoStatus(id, isCompleted) {\n    const index = this.todos.findIndex(t => t.id === id);\n    const todo = this.todos[index];\n    todo.isCompleted = isCompleted;\n    // Thay đổi index thành todo mới\n    this.todos.splice(index, 1, todo);\n    this.updateToLocalStorage();\n  }\n  editTodo(id, content) {\n    const index = this.todos.findIndex(t => t.id === id);\n    const todo = this.todos[index];\n    todo.content = content;\n    this.todos.splice(index, 1, todo);\n    this.updateToLocalStorage();\n  }\n  deleteTodo(id) {\n    const index = this.todos.findIndex(t => t.id === id);\n    this.todos.splice(index, 1);\n    this.updateToLocalStorage();\n  }\n  toggleAll() {\n    this.todos = this.todos.map(todo => {\n      return {\n        ...todo,\n        isCompleted: !this.todos.every(t => t.isCompleted)\n      };\n    });\n    this.updateToLocalStorage();\n  }\n  filterTodo(filter, isFiltering = true) {\n    this.currentFilter = filter;\n    switch (filter) {\n      // Với todo.isCompleted = fasle\n      case Filter.Active:\n        this.filterTodos = this.todos.filter(todo => !todo.isCompleted);\n        break;\n      // Với todo.isCompleted = true\n      case Filter.Completed:\n        this.filterTodos = this.todos.filter(todo => todo.isCompleted);\n        break;\n      // Với tất cả các todo\n      case Filter.All:\n        this.filterTodos = [...this.todos.map(todo => ({\n          ...todo\n        }))];\n        break;\n    }\n    if (isFiltering) {\n      this.updateTodosData();\n    }\n  }\n  updateTodosData() {\n    this.displayTodosSubject.next(this.filterTodos);\n    this.lengthSubject.next(this.todos.length);\n  }\n}\nTodoService.TodoStorageKey = \"todos\";\nTodoService.ɵfac = function TodoService_Factory(t) {\n  return new (t || TodoService)(i0.ɵɵinject(i1.LocalStorageService));\n};\nTodoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodoService,\n  factory: TodoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Todo","BehaviorSubject","Filter","TodoService","constructor","storageService","lengthSubject","displayTodosSubject","currentFilter","All","todo$","asObservable","length$","fetchFromLocalStorage","todos","getValue","TodoStorageKey","filterTodos","map","todo","updateTodosData","updateToLocalStorage","setObject","filterTodo","addTodo","content","date","Date","now","getTime","newTodo","unshift","changeTodoStatus","id","isCompleted","index","findIndex","t","splice","editTodo","deleteTodo","toggleAll","every","filter","isFiltering","Active","Completed","next","length","i0","ɵɵinject","i1","LocalStorageService","factory","ɵfac","providedIn"],"sources":["D:\\Data\\TTS_Angular\\ToDoApp\\angular_todoapp\\src\\app\\services\\todo.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { Todo } from '../models/todo.model';\nimport { BehaviorSubject, Observable, ObservableLike } from 'rxjs';\nimport { Filter } from '../models/filter.model';\nimport { LocalStorageService } from './local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService{\n\n  private static readonly TodoStorageKey = \"todos\";\n\n  private todos!: Todo[];\n  private filterTodos!: Todo[];\n  private lengthSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  private displayTodosSubject: BehaviorSubject<Todo[]> = new BehaviorSubject<Todo[]>([]);\n  private currentFilter: Filter = Filter.All;\n\n  todo$: Observable<Todo[]> = this.displayTodosSubject.asObservable();\n  length$: Observable<number> = this.lengthSubject.asObservable();\n\n  constructor(private storageService: LocalStorageService) {  }\n\n  fetchFromLocalStorage(){\n    this.todos = this.storageService.getValue<Todo[]>(TodoService.TodoStorageKey) || [];\n    this.filterTodos = [...this.todos.map(todo => ({...todo}) )];\n    this.updateTodosData();\n  }\n\n  updateToLocalStorage(){\n    this.storageService.setObject(TodoService.TodoStorageKey, this.todos);\n    this.filterTodo(this.currentFilter, false);\n    this.updateTodosData();\n  }\n\n  addTodo(content: string){\n    const date = new Date(Date.now()).getTime();\n    const newTodo = new Todo(date, content);\n    this.todos.unshift(newTodo);\n    this.updateToLocalStorage();\n  }\n\n  changeTodoStatus(id: number, isCompleted: boolean){\n    const index = this.todos.findIndex(t => t.id === id);\n    const todo = this.todos[index];\n    todo.isCompleted = isCompleted;\n    // Thay đổi index thành todo mới\n    this.todos.splice(index, 1, todo);\n    this.updateToLocalStorage();\n  }\n\n  editTodo(id: number, content: string){\n    const index = this.todos.findIndex(t => t.id === id);\n    const todo = this.todos[index];\n    todo.content = content;\n    this.todos.splice(index, 1, todo);\n    this.updateToLocalStorage();\n  }\n\n  deleteTodo(id: number){\n    const index = this.todos.findIndex(t => t.id === id);\n    this.todos.splice(index, 1);\n    this.updateToLocalStorage();\n  }\n\n  toggleAll(){\n    this.todos = this.todos.map(todo =>{\n      return {\n        ...todo,\n        isCompleted: !this.todos.every(t => t.isCompleted)\n      }\n    });\n    this.updateToLocalStorage();\n  }\n\n  filterTodo(filter: Filter, isFiltering: boolean = true){\n    this.currentFilter = filter;\n    switch(filter){\n      // Với todo.isCompleted = fasle\n      case Filter.Active:\n        this.filterTodos = this.todos.filter(todo => !todo.isCompleted);\n        break;\n      // Với todo.isCompleted = true\n      case Filter.Completed:\n        this.filterTodos = this.todos.filter(todo => todo.isCompleted);\n        break;\n      // Với tất cả các todo\n      case Filter.All:\n        this.filterTodos = [...this.todos.map(todo => ({...todo}) )];\n        break;\n    }\n\n    if(isFiltering){\n      this.updateTodosData();\n    }\n  }\n\n  private updateTodosData(){\n    this.displayTodosSubject.next(this.filterTodos);\n    this.lengthSubject.next(this.todos.length);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}