{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LocalStorageService {\n  constructor() {\n    this.storage = window.localStorage;\n  }\n  set(key, value) {\n    this.storage[key] = value;\n  }\n  get(key, value) {\n    return this.storage[key] || false;\n  }\n  // cài đặt lại key - value\n  setObject(key, value) {\n    if (!value) {\n      return;\n    }\n    this.storage[key] = JSON.stringify(value);\n  }\n  // Dùng\n  getObject(key) {\n    return JSON.parse(this.storage[key] || '{}');\n  }\n  // Dùng\n  getValue(key) {\n    const obj = JSON.parse(this.storage[key] || null);\n    return obj;\n  }\n  remove(key) {\n    this.storage.removeItem(key);\n  }\n  clear() {\n    this.storage.clear();\n  }\n  get length() {\n    return this.storage.length;\n  }\n  get isStorageEmpty() {\n    return this.storage.length === 0;\n  }\n}\nLocalStorageService.ɵfac = function LocalStorageService_Factory(t) {\n  return new (t || LocalStorageService)();\n};\nLocalStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LocalStorageService,\n  factory: LocalStorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LocalStorageService","constructor","storage","window","localStorage","set","key","value","get","setObject","JSON","stringify","getObject","parse","getValue","obj","remove","removeItem","clear","length","isStorageEmpty","factory","ɵfac","providedIn"],"sources":["D:\\Data\\TTS_Angular\\ToDoApp\\angular_todoapp\\src\\app\\services\\local-storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  storage: Storage;\n  constructor() {\n    this.storage = window.localStorage;\n    \n  }\n\n  set(key:string, value: string): void{\n    this.storage[key] = value;\n  }\n\n  get(key:string, value: any): void{\n    return this.storage[key] || false;\n  }\n\n  // cài đặt lại key - value\n  setObject(key:string, value:any): void{\n    if(!value){\n      return;\n    }\n    this.storage[key] = JSON.stringify(value);\n  }\n\n  // Dùng\n  getObject(key:string): any{\n    return JSON.parse(this.storage[key] || '{}');\n  }\n\n  // Dùng\n  getValue<T>(key:string): T{\n    const obj = JSON.parse(this.storage[key] || null);\n    return <T>obj;\n  }\n\n  remove(key: string): any{\n    this.storage.removeItem(key);\n  }\n\n  clear(){\n    this.storage.clear();\n  }\n\n  get length(): number{\n    return this.storage.length;\n  }\n\n  get isStorageEmpty(): boolean{\n    return this.storage.length === 0; \n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAA;IACE,IAAI,CAACC,OAAO,GAAGC,MAAM,CAACC,YAAY;EAEpC;EAEAC,GAAGA,CAACC,GAAU,EAAEC,KAAa;IAC3B,IAAI,CAACL,OAAO,CAACI,GAAG,CAAC,GAAGC,KAAK;EAC3B;EAEAC,GAAGA,CAACF,GAAU,EAAEC,KAAU;IACxB,OAAO,IAAI,CAACL,OAAO,CAACI,GAAG,CAAC,IAAI,KAAK;EACnC;EAEA;EACAG,SAASA,CAACH,GAAU,EAAEC,KAAS;IAC7B,IAAG,CAACA,KAAK,EAAC;MACR;;IAEF,IAAI,CAACL,OAAO,CAACI,GAAG,CAAC,GAAGI,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;EAC3C;EAEA;EACAK,SAASA,CAACN,GAAU;IAClB,OAAOI,IAAI,CAACG,KAAK,CAAC,IAAI,CAACX,OAAO,CAACI,GAAG,CAAC,IAAI,IAAI,CAAC;EAC9C;EAEA;EACAQ,QAAQA,CAAIR,GAAU;IACpB,MAAMS,GAAG,GAAGL,IAAI,CAACG,KAAK,CAAC,IAAI,CAACX,OAAO,CAACI,GAAG,CAAC,IAAI,IAAI,CAAC;IACjD,OAAUS,GAAG;EACf;EAEAC,MAAMA,CAACV,GAAW;IAChB,IAAI,CAACJ,OAAO,CAACe,UAAU,CAACX,GAAG,CAAC;EAC9B;EAEAY,KAAKA,CAAA;IACH,IAAI,CAAChB,OAAO,CAACgB,KAAK,EAAE;EACtB;EAEA,IAAIC,MAAMA,CAAA;IACR,OAAO,IAAI,CAACjB,OAAO,CAACiB,MAAM;EAC5B;EAEA,IAAIC,cAAcA,CAAA;IAChB,OAAO,IAAI,CAAClB,OAAO,CAACiB,MAAM,KAAK,CAAC;EAClC;;AAjDWnB,mBAAmB,C;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB,C;SAAnBA,mBAAmB;EAAAqB,OAAA,EAAnBrB,mBAAmB,CAAAsB,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}