{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n// Hiệu ứng gạch chân khi completed\nconst fadeStrikeThroughAnimation = trigger('fadeStrikeThrough', [state('active', style({\n  fontSize: '18px',\n  color: 'black'\n})), state('completed', style({\n  fontSize: '17px',\n  color: 'lightgrey',\n  textDecoration: 'line-through'\n})), transition('active <=> completed', [animate(250)])]);\nexport let TodoItemComponent = class TodoItemComponent {\n  constructor() {\n    // Conponent con tạo sự kiện để component cha nhận\n    // Phát ra sự kiện changeStatus\n    this.changeStatus = new EventEmitter();\n    this.editTodo = new EventEmitter();\n    this.deleteTodo = new EventEmitter();\n    this.isHovered = false;\n    this.isEditing = false;\n  }\n  // Thay đổi trạng thái của todo\n  changeTodoStatus() {\n    // \n    this.changeStatus.emit({\n      ...this.todo,\n      isCompleted: !this.todo.isCompleted\n    });\n  }\n  // Nhận event ấn phím Enter\n  submitEdit(event) {\n    const {\n      keyCode\n    } = event;\n    event.preventDefault();\n    // Nếu keyCode là phím Enter\n    if (keyCode === 13) {\n      this.editTodo.emit(this.todo);\n      this.isEditing = false;\n    }\n  }\n  removeTodo() {\n    this.deleteTodo.emit(this.todo);\n  }\n};\n__decorate([Input()], TodoItemComponent.prototype, \"todo\", void 0);\n__decorate([Output()], TodoItemComponent.prototype, \"changeStatus\", void 0);\n__decorate([Output()], TodoItemComponent.prototype, \"editTodo\", void 0);\n__decorate([Output()], TodoItemComponent.prototype, \"deleteTodo\", void 0);\nTodoItemComponent = __decorate([Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.css'],\n  animations: [fadeStrikeThroughAnimation]\n})], TodoItemComponent);","map":{"version":3,"names":["animate","state","style","transition","trigger","Component","EventEmitter","Input","Output","fadeStrikeThroughAnimation","fontSize","color","textDecoration","TodoItemComponent","constructor","changeStatus","editTodo","deleteTodo","isHovered","isEditing","changeTodoStatus","emit","todo","isCompleted","submitEdit","event","keyCode","preventDefault","removeTodo","__decorate","selector","templateUrl","styleUrls","animations"],"sources":["D:\\Data\\TTS_Angular\\ToDoApp\\angular_todoapp\\src\\app\\components\\todo-item\\todo-item.component.ts"],"sourcesContent":["import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Todo } from 'src/app/models/todo.model';\n\n// Hiệu ứng gạch chân khi completed\nconst fadeStrikeThroughAnimation = trigger('fadeStrikeThrough', [\n  state('active', style({\n    fontSize: '18px',\n    color: 'black'\n  })),\n  state('completed', style({\n    fontSize: '17px',\n    color: 'lightgrey',\n    textDecoration: 'line-through'\n  })),\n  transition('active <=> completed', [animate(250)])\n])\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.css'],\n  animations: [fadeStrikeThroughAnimation]\n})\nexport class TodoItemComponent{\n  // Nhận giá trị todo từ todo-list component\n  @Input() todo!: Todo;\n\n  // Conponent con tạo sự kiện để component cha nhận\n  // Phát ra sự kiện changeStatus\n  @Output() changeStatus: EventEmitter<Todo> = new EventEmitter<Todo>();\n  @Output() editTodo: EventEmitter<Todo> = new EventEmitter<Todo>();\n  @Output() deleteTodo: EventEmitter<Todo> = new EventEmitter<Todo>();\n\n  isHovered = false;\n  isEditing = false;\n\n  // Thay đổi trạng thái của todo\n  changeTodoStatus(){\n    // \n    this.changeStatus.emit({...this.todo, isCompleted: !this.todo.isCompleted});\n  }\n\n  // Nhận event ấn phím Enter\n  submitEdit(event: KeyboardEvent){\n    const {keyCode} = event;\n    event.preventDefault();\n    // Nếu keyCode là phím Enter\n    if(keyCode === 13){\n      this.editTodo.emit(this.todo);\n      this.isEditing = false;\n    }\n  }\n\n  removeTodo(){\n    this.deleteTodo.emit(this.todo);\n  }\n\n}\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,QAAQ,qBAAqB;AAChF,SAASC,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAGtE;AACA,MAAMC,0BAA0B,GAAGL,OAAO,CAAC,mBAAmB,EAAE,CAC9DH,KAAK,CAAC,QAAQ,EAAEC,KAAK,CAAC;EACpBQ,QAAQ,EAAE,MAAM;EAChBC,KAAK,EAAE;CACR,CAAC,CAAC,EACHV,KAAK,CAAC,WAAW,EAAEC,KAAK,CAAC;EACvBQ,QAAQ,EAAE,MAAM;EAChBC,KAAK,EAAE,WAAW;EAClBC,cAAc,EAAE;CACjB,CAAC,CAAC,EACHT,UAAU,CAAC,sBAAsB,EAAE,CAACH,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CACnD,CAAC;AAQK,WAAMa,iBAAiB,GAAvB,MAAMA,iBAAiB;EAAvBC,YAAA;IAIL;IACA;IACU,KAAAC,YAAY,GAAuB,IAAIT,YAAY,EAAQ;IAC3D,KAAAU,QAAQ,GAAuB,IAAIV,YAAY,EAAQ;IACvD,KAAAW,UAAU,GAAuB,IAAIX,YAAY,EAAQ;IAEnE,KAAAY,SAAS,GAAG,KAAK;IACjB,KAAAC,SAAS,GAAG,KAAK;EAuBnB;EArBE;EACAC,gBAAgBA,CAAA;IACd;IACA,IAAI,CAACL,YAAY,CAACM,IAAI,CAAC;MAAC,GAAG,IAAI,CAACC,IAAI;MAAEC,WAAW,EAAE,CAAC,IAAI,CAACD,IAAI,CAACC;IAAW,CAAC,CAAC;EAC7E;EAEA;EACAC,UAAUA,CAACC,KAAoB;IAC7B,MAAM;MAACC;IAAO,CAAC,GAAGD,KAAK;IACvBA,KAAK,CAACE,cAAc,EAAE;IACtB;IACA,IAAGD,OAAO,KAAK,EAAE,EAAC;MAChB,IAAI,CAACV,QAAQ,CAACK,IAAI,CAAC,IAAI,CAACC,IAAI,CAAC;MAC7B,IAAI,CAACH,SAAS,GAAG,KAAK;;EAE1B;EAEAS,UAAUA,CAAA;IACR,IAAI,CAACX,UAAU,CAACI,IAAI,CAAC,IAAI,CAACC,IAAI,CAAC;EACjC;CAED;AAhCUO,UAAA,EAARtB,KAAK,EAAE,C,8CAAa;AAIXsB,UAAA,EAATrB,MAAM,EAAE,C,sDAA6D;AAC5DqB,UAAA,EAATrB,MAAM,EAAE,C,kDAAyD;AACxDqB,UAAA,EAATrB,MAAM,EAAE,C,oDAA2D;AARzDK,iBAAiB,GAAAgB,UAAA,EAN7BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B,CAAC;EACxCC,UAAU,EAAE,CAACxB,0BAA0B;CACxC,CAAC,C,EACWI,iBAAiB,CAkC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}