{"ast":null,"code":"import { Todo } from '../models/todo.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Filter } from '../models/filter.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./local-storage.service\";\nexport class TodoService {\n  constructor(storageService) {\n    this.storageService = storageService;\n    this.lengthSubject = new BehaviorSubject(0);\n    this.displayTodosSubject = new BehaviorSubject([]);\n    this.currentFilter = Filter.All;\n    this.todo$ = this.displayTodosSubject.asObservable();\n    this.length$ = this.lengthSubject.asObservable();\n  }\n  fetchFromLocalStorage() {\n    this.todos = this.storageService.getValue(TodoService.TodoStorageKey) || [];\n    this.filterTodos = [...this.todos.map(todo => ({\n      ...todo\n    }))];\n    this.updateTodosData();\n  }\n  updateToLocalStorage() {\n    this.storageService.setObject(TodoService.TodoStorageKey, this.todos);\n    this.filterTodo(this.currentFilter, false);\n    this.updateTodosData();\n  }\n  addTodo(content) {\n    const date = new Date(Date.now()).getTime();\n    const newTodo = new Todo(date, content);\n    this.todos.unshift(newTodo);\n    this.updateToLocalStorage();\n  }\n  filterTodo(filter, isFiltering = true) {\n    this.currentFilter = filter;\n    switch (filter) {\n      // Với todo.isCompleted = fasle\n      case Filter.Active:\n        this.filterTodos = this.todos.filter(todo => !todo.isCompleted);\n        break;\n      // Với todo.isCompleted = true\n      case Filter.Completed:\n        this.filterTodos = this.todos.filter(todo => todo.isCompleted);\n        break;\n      // Với tất cả các todo\n      case Filter.All:\n        this.filterTodos = [...this.todos.map(todo => ({\n          ...todo\n        }))];\n        break;\n    }\n    if (isFiltering) {\n      this.updateTodosData();\n    }\n  }\n  updateTodosData() {\n    this.displayTodosSubject.next(this.filterTodos);\n    this.lengthSubject.next(this.todos.length);\n  }\n}\nTodoService.TodoStorageKey = \"todos\";\nTodoService.ɵfac = function TodoService_Factory(t) {\n  return new (t || TodoService)(i0.ɵɵinject(i1.LocalStorageService));\n};\nTodoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodoService,\n  factory: TodoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Todo","BehaviorSubject","Filter","TodoService","constructor","storageService","lengthSubject","displayTodosSubject","currentFilter","All","todo$","asObservable","length$","fetchFromLocalStorage","todos","getValue","TodoStorageKey","filterTodos","map","todo","updateTodosData","updateToLocalStorage","setObject","filterTodo","addTodo","content","date","Date","now","getTime","newTodo","unshift","filter","isFiltering","Active","isCompleted","Completed","next","length","i0","ɵɵinject","i1","LocalStorageService","factory","ɵfac","providedIn"],"sources":["D:\\Data\\TTS_Angular\\ToDoApp\\angular_todoapp\\src\\app\\services\\todo.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { Todo } from '../models/todo.model';\nimport { BehaviorSubject, Observable, ObservableLike } from 'rxjs';\nimport { Filter } from '../models/filter.model';\nimport { LocalStorageService } from './local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService{\n\n  private static readonly TodoStorageKey = \"todos\";\n\n  private todos!: Todo[];\n  private filterTodos!: Todo[];\n  private lengthSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  private displayTodosSubject: BehaviorSubject<Todo[]> = new BehaviorSubject<Todo[]>([]);\n  private currentFilter: Filter = Filter.All;\n\n  todo$: Observable<Todo[]> = this.displayTodosSubject.asObservable();\n  length$: Observable<number> = this.lengthSubject.asObservable();\n\n  constructor(private storageService: LocalStorageService) {  }\n\n  fetchFromLocalStorage(){\n    this.todos = this.storageService.getValue<Todo[]>(TodoService.TodoStorageKey) || [];\n    this.filterTodos = [...this.todos.map(todo => ({...todo}) )];\n    this.updateTodosData();\n  }\n\n  updateToLocalStorage(){\n    this.storageService.setObject(TodoService.TodoStorageKey, this.todos);\n    this.filterTodo(this.currentFilter, false);\n    this.updateTodosData();\n  }\n\n  addTodo(content: string){\n    const date = new Date(Date.now()).getTime();\n    const newTodo = new Todo(date, content);\n    this.todos.unshift(newTodo);\n    this.updateToLocalStorage();\n  }\n\n  filterTodo(filter: Filter, isFiltering: boolean = true){\n    this.currentFilter = filter;\n    switch(filter){\n      // Với todo.isCompleted = fasle\n      case Filter.Active:\n        this.filterTodos = this.todos.filter(todo => !todo.isCompleted);\n        break;\n      // Với todo.isCompleted = true\n      case Filter.Completed:\n        this.filterTodos = this.todos.filter(todo => todo.isCompleted);\n        break;\n      // Với tất cả các todo\n      case Filter.All:\n        this.filterTodos = [...this.todos.map(todo => ({...todo}) )];\n        break;\n    }\n\n    if(isFiltering){\n      this.updateTodosData();\n    }\n  }\n\n  private updateTodosData(){\n    this.displayTodosSubject.next(this.filterTodos);\n    this.lengthSubject.next(this.todos.length);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}